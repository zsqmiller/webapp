在Windows 上安装Git 同样轻松，有个叫做msysGit 的项目提供了安装包，可以从
Google Code 的页面上下载安装文件（.exe）：
http://code.google.com/p/msysgit
完成安装之后，就可以使用命令行的git 工具（已经自带了ssh 客户端）了，另外还有
一个图形界面的Git 项目管理工具。
8
Scott Chacon Pro Git 1.5节初次运行Git 前的配置



1.5 初次运行Git 前的配置
一般在新的系统上，我们都需要先配置下自己的Git 工作环境。配置工作只需一次，以
后升级时还会沿用现在的配置。当然，如果需要，你随时可以用相同的命令修改已有的配
置。
Git 提供了一个叫做git config 的工具（译注：实际是git-config 命令，只不过可以
通过git 加一个名字来呼叫此命令。），专门用来配置或读取相应的工作环境变量。而正
是由这些环境变量，决定了Git 在各个环节的具体工作方式和行为。这些变量可以存放在
以下三个不同的地方：
. /etc/gitconfig文件：系统中对所有用户都普遍适用的配置。若使用git config 时
用--system 选项，读写的就是这个文件。
. ~/.gitconfig文件：用户目录下的配置文件只适用于该用户。若使用git config 时
用--global 选项，读写的就是这个文件。
. 当前项目的git 目录中的配置文件（也就是工作目录中的.git/config 文件）：这
里的配置仅仅针对当前项目有效。每一个级别的配置都会覆盖上层的相同配置，所以
.git/config 里的配置会覆盖/etc/gitconfig 中的同名变量。
在Windows 系统上，Git 会找寻用户主目录下的.gitconfig 文件。主目录即$HOME 变量
指定的目录，一般都是C:\Documents and Settings\$USER。此外，Git 还会尝试找寻/
etc/gitconfig 文件，只不过看当初Git 装在什么目录，就以此作为根目录来定位。
1.5.1 用户信息
第一个要配置的是你个人的用户名称和电子邮件地址。这两条配置很重要，每次Git 提
交时都会引用这两条信息，说明是谁提交了更新，所以会随更新内容一起被永久纳入历史记
录：
$ git config --global user.name "John Doe"
$ git config --global user.email johndoe@example.com
如果用了--global 选项，那么更改的配置文件就是位于你用户主目录下的那个，以后你
所有的项目都会默认使用这里配置的用户信息。如果要在某个特定的项目中使用其他名字或
者电邮，只要去掉--global 选项重新配置即可，新的设定保存在当前项目的.git/config
文件里。
1.5.2 文本编辑器
接下来要设置的是默认使用的文本编辑器。Git 需要你输入一些额外消息的时候，会自动
调用一个外部文本编辑器给你用。默认会使用操作系统指定的默认编辑器，一般可能会是
Vi 或者Vim。如果你有其他偏好，比如Emacs 的话，可以重新设置：
$ git config --global core.editor emacs
9
第1章起步Scott Chacon Pro Git
1.5.3 差异分析工具
还有一个比较常用的是，在解决合并冲突时使用哪种差异分析工具。比如要改用vimdiff
的话：
$ git config --global merge.tool vimdiff
Git 可以理解kdiff3，tkdiff，meld，xxdiff，emerge，vimdiff，gvimdiff，ecmerge，
和opendiff 等合并工具的输出信息。当然，你也可以指定使用自己开发的工具，具体怎么
做可以参阅第七章。
1.5.4 查看配置信息
要检查已有的配置信息，可以使用git config --list 命令：
$ git config --list
user.name=Scott Chacon
user.email=schacon@gmail.com
color.status=auto
color.branch=auto
color.interactive=auto
color.diff=auto
...
有时候会看到重复的变量名，那就说明它们来自不同的配置文件（比如/etc/gitconfig
和~/.gitconfig），不过最终Git 实际采用的是最后一个。
也可以直接查阅某个环境变量的设定，只要把特定的名字跟在后面即可，像这样：
$ git config use